<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>MadCap products</h1>
        <p>MadCap Software offers a comprehensive suite of tools purpose-built for the creation, translation, and localization of professional technical documentation. These products are designed to work together seamlessly.</p>
        <h2>MadCap Flare</h2>
        <p>MadCap Flare is the flagship product of MadCap Software, designed for professional technical communicators who require powerful authoring and publishing capabilities. Flare stands out for its single-sourcing, topic-based architecture, and support for multiple output formats. From a localization perspective, it offers an extensive range of features that streamline the preparation of content for translation and simplify the ongoing management of multilingual projects.</p>
        <h3>Key features for localization:</h3>
        <ul>
            <li>
                <p>Topic-based authoring: Content is divided into modular topics rather than long monolithic documents. This allows for reusability and makes it easier to identify which pieces of content require translation when updates occur.</p>
            </li>
            <li>
                <p>Multilingual project architecture: Within a single Flare project, users can define language-specific targets, skins, and CSS styles. This avoids the need for duplicating entire projects for each language.</p>
            </li>
            <li>
                <p>Built-in terminology management: By using global <a href="../3. Writing for localization/Prudent use of Flare features/Variables.htm">variables</a> for things like product names, UI elements, or legal disclaimers, consistency is maintained across the project, and translators can easily identify standardised terms.</p>
            </li>
            <li>
                <p>Conditional text and snippets: Flare allows writers to mark certain content as <a href="../3. Writing for localization/Prudent use of Flare features/Conditions.htm">conditional</a>, meaning it will only appear in certain outputs (for example, region-specific content). <a href="../3. Writing for localization/Prudent use of Flare features/Snippets.htm">Snippets</a> can be reused across multiple topics, reducing translation costs and ensuring uniformity.</p>
            </li>
            <li>
                <p>Bi-directional and unicode support: Flare fully supports right-to-left (RTL) languages such as Arabic and Hebrew, as well as Unicode for global character compatibility.</p>
            </li>
            <li>
                <p>Review and translation tracking: Flare can identify which topics have been changed since the last translation export using the Analysis feature, making it easier to send only updated content to translators.</p>
            </li>
            <li>
                <p>Language skins and interface localization: Flare allows you to create language-specific HTML5 skins, adapting navigation elements and interface strings (for example, search, menu items) to match the language of the content.</p>
            </li>
        </ul>
        <p>In summary, Flare is not only a robust authoring tool but also a localization-aware platform that supports efficient content reuse, translation preparation, and multilingual output generation.</p>
        <h2>MadCap Lingo</h2>
        <p>MadCap Lingo is a fully integrated Computer-Assisted Translation (CAT) tool designed to work directly with Flare projects. Unlike traditional third-party CAT tools, Lingo understands the structure of Flare projects natively, eliminating the need to unzip, repackage, or reconstruct files for translation.</p>
        <p>It is suitable for in-house translation teams as well as external localization vendors who need to work within a structured authoring framework.</p>
        <h3>Key features for localization:</h3>
        <ul>
            <li>
                <p>Seamless integration with Flare: Lingo can open Flare projects directly and maintain their structure, which reduces the chances of file corruption and translation errors. There is no need to flatten or simplify Flare content before translation.</p>
            </li>
            <li>
                <p>Translation memory (TM): Lingo automatically stores every translated segment in a database, so repeated phrases are translated consistently. TM also reduces costs over time, as content that has already been translated can be reused automatically.</p>
            </li>
            <li>
                <p>Terminology management: Users can create and manage term bases (glossaries) within Lingo. This ensures that translators use approved and standardised terminology, especially for technical terms, UI strings, or legal phrasing.</p>
            </li>
            <li>
                <p>Side-by-side editing interface: Lingo displays the source text alongside the translation field, allowing for easier editing and alignment. Users can preview formatting and tags in real time.</p>
            </li>
            <li>
                <p>Built-in QA checks: Lingo includes automated quality assurance features that identify common issues such as missing translations, broken links, tag mismatches, or inconsistent terminology usage.</p>
            </li>
            <li>
                <p>Project bundling and unpacking: Lingo allows users to create a translation bundle from a Flare project in XLIFF format, which can be shared with external translators who may or may not be using Lingo. Once translated, the bundle can be reimported seamlessly into Flare.</p>
            </li>
            <li>
                <p>Multi-language project management: Lingo supports the management of multiple target languages within the same project, enabling translation teams to work on several languages simultaneously and track progress for each.</p>
            </li>
            <li>
                <p>Reporting and metrics: Project managers can view reports on translation progress, TM leverage, QA issues, and term usage, helping maintain control over localization timelines and quality.</p>
            </li>
        </ul>
        <p>Overall, MadCap Lingo streamlines the translation process by removing unnecessary file conversions and offering a collaborative, structured environment that aligns with how Flare content is authored. It reduces turnaround times, improves translation consistency, and supports a scalable localization workflow.</p>
        <h2>MadCap Capture</h2>
        <p>MadCap Capture is an advanced image capture and editing tool, critical for localizing visual content.</p>
        <p>In multilingual documentation, visuals often need to be adapted. Capture helps by offering:</p>
        <ul>
            <li>
                <p>Callouts: Use numbered or symbol-based callouts instead of embedded text.</p>
            </li>
            <li>
                <p>Single-source images: Use one image across different outputs with conditional text overlays.</p>
            </li>
            <li>
                <p>Annotations and layers: Keep image text layers editable for translation.</p>
            </li>
            <li>
                <p>Automated capture profiles: Consistent screenshots based on pre-set styles and regions.</p>
            </li>
        </ul>
        <p>Capture ensures that your visual content is as localization-ready as your text content, supporting efficient updates and consistency.</p>
    </body>
</html>